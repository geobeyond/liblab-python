# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .link import Link
from .extent import Extent


@JsonMap({"id_": "id", "item_type": "itemType"})
class Collection(BaseModel):
    """Collection

    :param id_: identifier of the collection used, for example, in URIs
    :type id_: str
    :param title: human readable title of the collection, defaults to None
    :type title: str, optional
    :param description: a description of the features in the collection, defaults to None
    :type description: str, optional
    :param links: links
    :type links: List[Link]
    :param extent: The extent of the features in the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other extents, for example, thermal or pressure ranges., defaults to None
    :type extent: Extent, optional
    :param item_type: indicator about the type of the items in the collection (the default value is 'feature')., defaults to None
    :type item_type: str, optional
    :param crs: the list of coordinate reference systems supported by the service, defaults to None
    :type crs: List[str], optional
    """

    def __init__(
        self,
        id_: str,
        links: List[Link],
        title: str = None,
        description: str = None,
        extent: Extent = None,
        item_type: str = None,
        crs: List[str] = None,
    ):
        """Collection

        :param id_: identifier of the collection used, for example, in URIs
        :type id_: str
        :param title: human readable title of the collection, defaults to None
        :type title: str, optional
        :param description: a description of the features in the collection, defaults to None
        :type description: str, optional
        :param links: links
        :type links: List[Link]
        :param extent: The extent of the features in the collection. In the Core only spatial and temporal extents are specified. Extensions may add additional members to represent other extents, for example, thermal or pressure ranges., defaults to None
        :type extent: Extent, optional
        :param item_type: indicator about the type of the items in the collection (the default value is 'feature')., defaults to None
        :type item_type: str, optional
        :param crs: the list of coordinate reference systems supported by the service, defaults to None
        :type crs: List[str], optional
        """
        self.id_ = id_
        if title is not None:
            self.title = title
        if description is not None:
            self.description = description
        self.links = self._define_list(links, Link)
        if extent is not None:
            self.extent = self._define_object(extent, Extent)
        if item_type is not None:
            self.item_type = item_type
        if crs is not None:
            self.crs = crs
