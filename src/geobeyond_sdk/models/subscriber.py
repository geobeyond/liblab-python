# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap(
    {
        "success_uri": "successUri",
        "in_progress_uri": "inProgressUri",
        "failed_uri": "failedUri",
    }
)
class Subscriber(BaseModel):
    """Optional URIs for callbacks for this job.

    Support for this parameter is not required and the parameter may be
    removed from the API definition, if conformance class **'callback'**
    is not listed in the conformance declaration under `/conformance`.

    :param success_uri: success_uri, defaults to None
    :type success_uri: str, optional
    :param in_progress_uri: in_progress_uri, defaults to None
    :type in_progress_uri: str, optional
    :param failed_uri: failed_uri, defaults to None
    :type failed_uri: str, optional
    """

    def __init__(
        self,
        success_uri: str = None,
        in_progress_uri: str = None,
        failed_uri: str = None,
    ):
        """Optional URIs for callbacks for this job.

        Support for this parameter is not required and the parameter may be
        removed from the API definition, if conformance class **'callback'**
        is not listed in the conformance declaration under `/conformance`.

        :param success_uri: success_uri, defaults to None
        :type success_uri: str, optional
        :param in_progress_uri: in_progress_uri, defaults to None
        :type in_progress_uri: str, optional
        :param failed_uri: failed_uri, defaults to None
        :type failed_uri: str, optional
        """
        if success_uri is not None:
            self.success_uri = success_uri
        if in_progress_uri is not None:
            self.in_progress_uri = in_progress_uri
        if failed_uri is not None:
            self.failed_uri = failed_uri
