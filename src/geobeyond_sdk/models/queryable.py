# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({"type_": "type", "type_ref": "type-ref"})
class Queryable(BaseModel):
    """Queryable

    :param description: a human-readable narrative describing the queryable, defaults to None
    :type description: str, optional
    :param language: the language used for the title and description, defaults to None
    :type language: str, optional
    :param queryable: the token that may be used in a CQL predicate
    :type queryable: str
    :param title: a human readable title for the queryable, defaults to None
    :type title: str, optional
    :param type_: the data type of the queryable
    :type type_: str
    :param type_ref: a reference to the formal definition of the type, defaults to None
    :type type_ref: str, optional
    """

    def __init__(
        self,
        queryable: str,
        type_: str,
        description: str = None,
        language: str = None,
        title: str = None,
        type_ref: str = None,
    ):
        """Queryable

        :param description: a human-readable narrative describing the queryable, defaults to None
        :type description: str, optional
        :param language: the language used for the title and description, defaults to None
        :type language: str, optional
        :param queryable: the token that may be used in a CQL predicate
        :type queryable: str
        :param title: a human readable title for the queryable, defaults to None
        :type title: str, optional
        :param type_: the data type of the queryable
        :type type_: str
        :param type_ref: a reference to the formal definition of the type, defaults to None
        :type type_ref: str, optional
        """
        if description is not None:
            self.description = description
        if language is not None:
            self.language = language
        self.queryable = queryable
        if title is not None:
            self.title = title
        self.type_ = type_
        if type_ref is not None:
            self.type_ref = type_ref
