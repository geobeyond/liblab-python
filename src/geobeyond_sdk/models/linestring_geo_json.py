# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


class LinestringGeoJsonType(Enum):
    """An enumeration representing different categories.

    :cvar LINESTRING: "LineString"
    :vartype LINESTRING: str
    """

    LINESTRING = "LineString"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, LinestringGeoJsonType._member_map_.values()))


@JsonMap({"type_": "type"})
class LinestringGeoJson(BaseModel):
    """LinestringGeoJson

    :param type_: type_
    :type type_: LinestringGeoJsonType
    :param coordinates: coordinates
    :type coordinates: List[List[float]]
    """

    def __init__(self, type_: LinestringGeoJsonType, coordinates: List[List[float]]):
        """LinestringGeoJson

        :param type_: type_
        :type type_: LinestringGeoJsonType
        :param coordinates: coordinates
        :type coordinates: List[List[float]]
        """
        self.type_ = self._enum_matching(type_, LinestringGeoJsonType.list(), "type_")
        self.coordinates = coordinates
