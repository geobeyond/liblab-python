# This file was generated by liblab | https://liblab.com/

from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


@JsonMap({"type_": "type"})
class Link(BaseModel):
    """Link

    :param href: href
    :type href: str
    :param rel: rel, defaults to None
    :type rel: str, optional
    :param type_: type_, defaults to None
    :type type_: str, optional
    :param hreflang: hreflang, defaults to None
    :type hreflang: str, optional
    :param title: title, defaults to None
    :type title: str, optional
    :param length: length, defaults to None
    :type length: int, optional
    """

    def __init__(
        self,
        href: str,
        rel: str = None,
        type_: str = None,
        hreflang: str = None,
        title: str = None,
        length: int = None,
    ):
        """Link

        :param href: href
        :type href: str
        :param rel: rel, defaults to None
        :type rel: str, optional
        :param type_: type_, defaults to None
        :type type_: str, optional
        :param hreflang: hreflang, defaults to None
        :type hreflang: str, optional
        :param title: title, defaults to None
        :type title: str, optional
        :param length: length, defaults to None
        :type length: int, optional
        """
        self.href = href
        if rel is not None:
            self.rel = rel
        if type_ is not None:
            self.type_ = type_
        if hreflang is not None:
            self.hreflang = hreflang
        if title is not None:
            self.title = title
        if length is not None:
            self.length = length
