# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


class MultilinestringGeoJsonType(Enum):
    """An enumeration representing different categories.

    :cvar MULTILINESTRING: "MultiLineString"
    :vartype MULTILINESTRING: str
    """

    MULTILINESTRING = "MultiLineString"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(
            map(lambda x: x.value, MultilinestringGeoJsonType._member_map_.values())
        )


@JsonMap({"type_": "type"})
class MultilinestringGeoJson(BaseModel):
    """MultilinestringGeoJson

    :param type_: type_
    :type type_: MultilinestringGeoJsonType
    :param coordinates: coordinates
    :type coordinates: List[List[List[float]]]
    """

    def __init__(
        self, type_: MultilinestringGeoJsonType, coordinates: List[List[List[float]]]
    ):
        """MultilinestringGeoJson

        :param type_: type_
        :type type_: MultilinestringGeoJsonType
        :param coordinates: coordinates
        :type coordinates: List[List[List[float]]]
        """
        self.type_ = self._enum_matching(
            type_, MultilinestringGeoJsonType.list(), "type_"
        )
        self.coordinates = coordinates
