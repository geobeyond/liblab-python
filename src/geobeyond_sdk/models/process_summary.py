# This file was generated by liblab | https://liblab.com/

from __future__ import annotations
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel
from .metadata import Metadata
from .job_control_options import JobControlOptions
from .transmission_mode import TransmissionMode
from .link_3 import Link3
from .additional_parameter import AdditionalParameter


@JsonMap({})
class AdditionalParameters(BaseModel):
    """AdditionalParameters

    :param title: title, defaults to None
    :type title: str, optional
    :param role: role, defaults to None
    :type role: str, optional
    :param href: href, defaults to None
    :type href: str, optional
    :param parameters: parameters, defaults to None
    :type parameters: List[AdditionalParameter], optional
    """

    def __init__(
        self,
        title: str = None,
        role: str = None,
        href: str = None,
        parameters: List[AdditionalParameter] = None,
    ):
        """AdditionalParameters

        :param title: title, defaults to None
        :type title: str, optional
        :param role: role, defaults to None
        :type role: str, optional
        :param href: href, defaults to None
        :type href: str, optional
        :param parameters: parameters, defaults to None
        :type parameters: List[AdditionalParameter], optional
        """
        if title is not None:
            self.title = title
        if role is not None:
            self.role = role
        if href is not None:
            self.href = href
        if parameters is not None:
            self.parameters = self._define_list(parameters, AdditionalParameter)


@JsonMap(
    {
        "additional_parameters": "additionalParameters",
        "id_": "id",
        "job_control_options": "jobControlOptions",
        "output_transmission": "outputTransmission",
    }
)
class ProcessSummary(BaseModel):
    """ProcessSummary

    :param title: title, defaults to None
    :type title: str, optional
    :param description: description, defaults to None
    :type description: str, optional
    :param keywords: keywords, defaults to None
    :type keywords: List[str], optional
    :param metadata: metadata, defaults to None
    :type metadata: List[Metadata], optional
    :param additional_parameters: additional_parameters, defaults to None
    :type additional_parameters: AdditionalParameters, optional
    :param id_: id_
    :type id_: str
    :param version: version
    :type version: str
    :param job_control_options: job_control_options, defaults to None
    :type job_control_options: List[JobControlOptions], optional
    :param output_transmission: output_transmission, defaults to None
    :type output_transmission: List[TransmissionMode], optional
    :param links: links, defaults to None
    :type links: List[Link3], optional
    """

    def __init__(
        self,
        id_: str,
        version: str,
        title: str = None,
        description: str = None,
        keywords: List[str] = None,
        metadata: List[Metadata] = None,
        additional_parameters: AdditionalParameters = None,
        job_control_options: List[JobControlOptions] = None,
        output_transmission: List[TransmissionMode] = None,
        links: List[Link3] = None,
    ):
        """ProcessSummary

        :param title: title, defaults to None
        :type title: str, optional
        :param description: description, defaults to None
        :type description: str, optional
        :param keywords: keywords, defaults to None
        :type keywords: List[str], optional
        :param metadata: metadata, defaults to None
        :type metadata: List[Metadata], optional
        :param additional_parameters: additional_parameters, defaults to None
        :type additional_parameters: AdditionalParameters, optional
        :param id_: id_
        :type id_: str
        :param version: version
        :type version: str
        :param job_control_options: job_control_options, defaults to None
        :type job_control_options: List[JobControlOptions], optional
        :param output_transmission: output_transmission, defaults to None
        :type output_transmission: List[TransmissionMode], optional
        :param links: links, defaults to None
        :type links: List[Link3], optional
        """
        if title is not None:
            self.title = title
        if description is not None:
            self.description = description
        if keywords is not None:
            self.keywords = keywords
        if metadata is not None:
            self.metadata = self._define_list(metadata, Metadata)
        if additional_parameters is not None:
            self.additional_parameters = self._define_object(
                additional_parameters, AdditionalParameters
            )
        self.id_ = id_
        self.version = version
        if job_control_options is not None:
            self.job_control_options = self._define_list(
                job_control_options, JobControlOptions
            )
        if output_transmission is not None:
            self.output_transmission = self._define_list(
                output_transmission, TransmissionMode
            )
        if links is not None:
            self.links = self._define_list(links, Link3)
