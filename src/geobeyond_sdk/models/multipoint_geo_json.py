# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List
from .utils.json_map import JsonMap
from .utils.base_model import BaseModel


class MultipointGeoJsonType(Enum):
    """An enumeration representing different categories.

    :cvar MULTIPOINT: "MultiPoint"
    :vartype MULTIPOINT: str
    """

    MULTIPOINT = "MultiPoint"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, MultipointGeoJsonType._member_map_.values()))


@JsonMap({"type_": "type"})
class MultipointGeoJson(BaseModel):
    """MultipointGeoJson

    :param type_: type_
    :type type_: MultipointGeoJsonType
    :param coordinates: coordinates
    :type coordinates: List[List[float]]
    """

    def __init__(self, type_: MultipointGeoJsonType, coordinates: List[List[float]]):
        """MultipointGeoJson

        :param type_: type_
        :type type_: MultipointGeoJsonType
        :param coordinates: coordinates
        :type coordinates: List[List[float]]
        """
        self.type_ = self._enum_matching(type_, MultipointGeoJsonType.list(), "type_")
        self.coordinates = coordinates
